Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.8/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.8/site-packages/nbclient/client.py", line 535, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.8/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/local/lib/python3.8/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df = pd.read_json(path_or_buf = psexec_json, lines = True)
df.head(5)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-3-44e77881bec9>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mdf[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mread_json[0m[0;34m([0m[0mpath_or_buf[0m [0;34m=[0m [0mpsexec_json[0m[0;34m,[0m [0mlines[0m [0;34m=[0m [0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0mdf[0m[0;34m.[0m[0mhead[0m[0;34m([0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/site-packages/pandas/util/_decorators.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    197[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m                     [0mkwargs[0m[0;34m[[0m[0mnew_arg_name[0m[0;34m][0m [0;34m=[0m [0mnew_arg_value[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 199[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    200[0m [0;34m[0m[0m
[1;32m    201[0m         [0;32mreturn[0m [0mcast[0m[0;34m([0m[0mF[0m[0;34m,[0m [0mwrapper[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/site-packages/pandas/util/_decorators.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    294[0m                 )
[1;32m    295[0m                 [0mwarnings[0m[0;34m.[0m[0mwarn[0m[0;34m([0m[0mmsg[0m[0;34m,[0m [0mFutureWarning[0m[0;34m,[0m [0mstacklevel[0m[0;34m=[0m[0mstacklevel[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 296[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    297[0m [0;34m[0m[0m
[1;32m    298[0m         [0;32mreturn[0m [0mwrapper[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/site-packages/pandas/io/json/_json.py[0m in [0;36mread_json[0;34m(path_or_buf, orient, typ, dtype, convert_axes, convert_dates, keep_default_dates, numpy, precise_float, date_unit, encoding, lines, chunksize, compression, nrows)[0m
[1;32m    616[0m         [0;32mreturn[0m [0mjson_reader[0m[0;34m[0m[0;34m[0m[0m
[1;32m    617[0m [0;34m[0m[0m
[0;32m--> 618[0;31m     [0mresult[0m [0;34m=[0m [0mjson_reader[0m[0;34m.[0m[0mread[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    619[0m     [0;32mif[0m [0mshould_close[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    620[0m         [0mfilepath_or_buffer[0m[0;34m.[0m[0mclose[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/site-packages/pandas/io/json/_json.py[0m in [0;36mread[0;34m(self)[0m
[1;32m    751[0m                 [0mdata[0m [0;34m=[0m [0mensure_str[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    752[0m                 [0mdata[0m [0;34m=[0m [0mdata[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m"\n"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 753[0;31m                 [0mobj[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_object_parser[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_combine_lines[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    754[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    755[0m             [0mobj[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_object_parser[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/site-packages/pandas/io/json/_json.py[0m in [0;36m_get_object_parser[0;34m(self, json)[0m
[1;32m    775[0m         [0mobj[0m [0;34m=[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    776[0m         [0;32mif[0m [0mtyp[0m [0;34m==[0m [0;34m"frame"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 777[0;31m             [0mobj[0m [0;34m=[0m [0mFrameParser[0m[0;34m([0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m.[0m[0mparse[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    778[0m [0;34m[0m[0m
[1;32m    779[0m         [0;32mif[0m [0mtyp[0m [0;34m==[0m [0;34m"series"[0m [0;32mor[0m [0mobj[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/site-packages/pandas/io/json/_json.py[0m in [0;36mparse[0;34m(self)[0m
[1;32m    884[0m [0;34m[0m[0m
[1;32m    885[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 886[0;31m             [0mself[0m[0;34m.[0m[0m_parse_no_numpy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    887[0m [0;34m[0m[0m
[1;32m    888[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mobj[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/site-packages/pandas/io/json/_json.py[0m in [0;36m_parse_no_numpy[0;34m(self)[0m
[1;32m   1117[0m         [0;32mif[0m [0morient[0m [0;34m==[0m [0;34m"columns"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1118[0m             self.obj = DataFrame(
[0;32m-> 1119[0;31m                 [0mloads[0m[0;34m([0m[0mjson[0m[0;34m,[0m [0mprecise_float[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mprecise_float[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1120[0m             )
[1;32m   1121[0m         [0;32melif[0m [0morient[0m [0;34m==[0m [0;34m"split"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: Expected object or value
ValueError: Expected object or value

